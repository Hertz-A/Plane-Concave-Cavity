import numpy as np
import matplotlib.pyplot as plt

#Todas as distâncias estão em unidade de metros!!

    
lamb = 780*1e-9 #Comprimento de onda do laser
R = 0.05 #raio do espelho concavo da cavidade
f = 40*1e-2 #distância focal da lente focal
w_0i = 1.32*1e-3 #beam waist do feixe colimado // Este valor deve ser obtido experimentalmente


#Cálculo analítico do tamanho da cavidade com base no beam waist.

def rayleigh_range(waist_entrada):
    z_0 = (np.pi*waist_entrada**2)/lamb
    return z_0

def beam_waist_focal_lens(waist_entrada):
    z_0 = rayleigh_range(waist_entrada)
    w_0f = waist_entrada/((1 + (z_0/f)**2)**(1/2))
    return w_0f

def tamanho_cavidade_pc(beam_waist):
    d_a = (R/2) + (((R**2) - 4*((beam_waist)**4)*((np.pi/lamb)**2))**(1/2))/2
    d_b = (R/2) - (((R**2) - 4*((beam_waist)**4)*((np.pi/lamb)**2))**(1/2))/2
    return d_a, d_b

print(beam_waist_focal_lens(w_0i))
print(tamanho_cavidade_pc(beam_waist_focal_lens(w_0i)))

#Plot do gráfico "tamanho da cavidade X beam waist":
    
d_pc = np.linspace(0,R,1000)

w_0 = np.array(d_pc.shape)
w_0 = ((lamb/np.pi)*((R*d_pc - d_pc**2))**(1/2))**(1/2)

plt.plot(d_pc,w_0, color = 'b', label = 'valores possíveis' )
plt.plot([0.05,beam_waist_focal_lens(w_0i)],[beam_waist_focal_lens(w_0i), beam_waist_focal_lens(w_0i)], color = 'g', label = 'waist desejado')

plt.xlabel("Tamanho da cavidade (m)")
plt.ylabel("Beam Waist (*1e-5 m)") 

plt.legend()
plt.show()
